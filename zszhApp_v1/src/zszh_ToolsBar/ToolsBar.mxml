<?xml version="1.0" encoding="utf-8"?>
<s:SkinnableContainer xmlns:fx="http://ns.adobe.com/mxml/2009" 
					  xmlns:s="library://ns.adobe.com/flex/spark" 
					  xmlns:mx="library://ns.adobe.com/flex/mx" width="642" height="46" initialize="skinnablecontainer_initializeHandler(event)">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
	<![CDATA[
		import mx.events.FlexEvent;
		
		import zszh_WorkSpace2D.Object2D_InWall;
		import zszh_WorkSpace2D.Object2D_Model;
		import zszh_WorkSpace2D.Object2D_Room;
		import zszh_WorkSpace2D.WorkSpace2D;
		import zszh_WorkSpace2D.WorkSpace2DContainer;
		
		import zszh_WorkSpace3D.WorkSpace3D;
		
		[Embed(source="embeds/ToolsBar/toolBar_selected1.png")]
		[Bindable]
		public var Button_select1:Class;

		[Embed(source="embeds/ToolsBar/toolBar_selected2.png")]
		[Bindable]
		public var Button_select2:Class;

		
		[Embed(source="embeds/ToolsBar/toolbar_1.png")]
		[Bindable]
		public var Button1_down:Class;
		
		
		[Embed(source="embeds/ToolsBar/toolbar_2.png")]
		[Bindable]
		public var Button2_down:Class;
		

		[Embed(source="embeds/ToolsBar/toolbar_3.png")]
		[Bindable]
		public var Button3_down:Class;
		
		
		[Embed(source="embeds/ToolsBar/toolbar_4.png")]
		[Bindable]
		public var Button4_down:Class;
		
		
		[Embed(source="embeds/ToolsBar/toolbar_5.png")]
		[Bindable]
		public var Button5_down:Class;
		
		
		[Embed(source="embeds/ToolsBar/toolbar_6.png")]
		[Bindable]
		public var Button6_down:Class;
		
		
		[Embed(source="embeds/ToolsBar/toolbar_7.png")]
		[Bindable]
		public var Button7_down:Class;
		
		
		[Embed(source="embeds/ToolsBar/toolbar_8.png")]
		[Bindable]
		public var Button8_down:Class;
		

		[Embed(source="embeds/ToolsBar/toolbar_9.png")]
		[Bindable]
		public var Button9_down:Class;
		

		[Embed(source="embeds/ToolsBar/toolbar_10.png")]
		[Bindable]
		public var Button10_down:Class;
		

		[Embed(source="embeds/ToolsBar/toolbar_11.png")]
		[Bindable]
		public var Button11_down:Class;

		private var _work2D:WorkSpace2D;
		private var _work3D:WorkSpace3D;
		private var _work2DContainer:WorkSpace2DContainer;
		
		protected function skinnablecontainer_initializeHandler(event:FlexEvent):void
		{
			_work2D=parentApplication.GetWorkSpace2D();
			_work3D=parentApplication.GetWorkSpace3D();
			_work2DContainer=parentApplication.GetWorkSpace2DContainer();
			
			Selected2.visible=true;
			Selected2.x=Button6.x-7;
			Selected2.y=Button6.y+5;
		}
		
		
		protected function Button_MouseDown(event:MouseEvent):void
		{
			var nameStr:String=event.target.name;
			if(nameStr=="Button1")
			{
				UnDo(event);
			}
			else if(nameStr=="Button2")
			{
				ReDo(event);
			}
			else if(nameStr=="Button3")
			{}
			else if(nameStr=="Button4")
			{}
			else if(nameStr=="Button5")
			{
				FPSVisit(event);
			}
			else if(nameStr=="Button6")
			{
				ShowWorkspace2D(event);
			}
			else if(nameStr=="Button7")
			{
				ShowWorkspace3D(event);
			}
			else if(nameStr=="Button8")
			{}
			else if(nameStr=="Button9")
			{}
			else if(nameStr=="Button10")
			{
				ShowCenter(event);
			}
			else if(nameStr=="Button11")
			{}
			
			if(nameStr=="Button3" || nameStr=="Button4" ||nameStr=="Button5" || nameStr=="Button6" ||nameStr=="Button7")
			{
				Selected2.visible=true;
				Selected2.x=event.target.x-7;
				Selected2.y=event.target.y-6;
			}
		}
		protected function Button_MouseOver(event:MouseEvent):void
		{
			var nameStr:String=event.target.name;
			if(nameStr=="Button1" || nameStr=="Button2" )
			{
				Selected1.visible=true;
				Selected1.x=event.target.x-6;
				Selected1.y=event.target.y-2;
				
			}
			
		}
		
		
		
		
		protected function SaveToXML(event:MouseEvent):void
		{
			_work2D.SaveToXML("SaveTest.xml");
		}
		protected function ShowWorkspace2D(event:MouseEvent):void
		{
			//updata 2d model position
			/*var _models3D:ObjectContainer3D=parentApplication.WorkSpace3D._modelsContainer3D;
			for(var i:int=0;i<_models3D.numChildren;i++)
			{
				var model3d:Model_3D = _models3D.getChildAt(i) as Model_3D;

				var _models2DVec:Vector.<Object2D_Model>=parentApplication.WorkSpace2D.WorkSpace2D._modelsVec;
				
				for(var i:int=0;i<_models2DVec.length;i++)
				{
					var model2d:Object2D_Model=_models2DVec[i];	
					
					if(model2d.name==model3d.name )
					{
						model2d.x=model3d.x+3200;
						model2d.y=3200-model3d.z;  
						break;
					}
				}
			}	*/
				
			parentApplication.WorkspaceBack.visible=true;
			_work3D.visible=false;
			_work2DContainer.visible=true;
		}
		
		protected function ShowWorkspace3D(event:MouseEvent):void
		{
			parentApplication.WorkspaceBack.visible=false;
			
			Show3DRooms();

			_work3D.visible=true;
			_work2D.SetAllNoSelected();
			_work2D.GetBounds();
			_work3D._cameraCenter.x=(_work2D._xMax-_work2D._xMin)/2+_work2D._xMin-3200;
			_work3D._cameraCenter.z=-(_work2D._yMax-_work2D._yMin)/2-_work2D._yMin+3200;
			_work2DContainer.visible=false;
			
			_work3D.NormalVisit();
			
		}
		
		private function FPSVisit(event:MouseEvent):void
		{
			if(_work3D.visible==false)
				ShowWorkspace3D(event);
			_work3D.FPSVisit();
		}
		
		protected function ShowCenter(event:MouseEvent):void
		{
			if(_work2DContainer.visible)
				_work2D.ShowCenter();
			else if(_work3D.visible)
			{
				_work3D._cameraCenter.x=(_work2D._xMax-_work2D._xMin)/2+_work2D._xMin-3200;
				_work3D._cameraCenter.z=-(_work2D._yMax-_work2D._yMin)/2-_work2D._yMin+3200;
			}
		}
		
		import zszh_Core.CommandManager;
		private function UnDo(event:MouseEvent):void
		{
			CommandManager.Instance.Undo();
		}
		
		private function ReDo(event:MouseEvent):void
		{
			CommandManager.Instance.Redo();
		}
		
		
		
		private function Show3DRooms():void
		{
			_work3D.ClearRoom();
			_work3D.ClearWallInside();
			_work3D.ClearModels();
			for(var i:int=0;i<_work2D.GetObject2D().numChildren;i++)
			{
				var obj:DisplayObject=_work2D.GetObject2D().getChildAt(i);
				
				if(obj is Object2D_Room)
				{
					var room2d:Object2D_Room= obj as Object2D_Room;		
					if(room2d.className=="Object2D_Room"&&room2d.visible)
					{ 
						_work3D.AddRoom(room2d);
						Show3DWallsInRoom(room2d);
						Show3DModelInRoom(room2d);
					}
				}
			}
		}
		
		private function Show3DWallsInRoom(room:Object2D_Room):void
		{
			for(var i:int=0;i<room.numChildren;i++)
			{
				var obj:DisplayObject=room.getChildAt(i);
				if(obj is Object2D_InWall)
				{
					var pos:Array=new Array;
					var vertex_old:Vector.<Number>= (obj as Object2D_InWall)._vertexVec;
					var vertex_new:Vector.<Number>=new Vector.<Number>;
					
					for(var j:int=0;j<vertex_old.length;j+=2)
					{
						vertex_new.push(room.x+obj.x+vertex_old[j]-3200);
						vertex_new.push(-room.y-obj.y-vertex_old[j+1]+3200);
					}
					_work3D.AddWallInside(vertex_new,obj.name);	 
				}	
			}
		}
		
		private function Show3DModelInRoom(room:Object2D_Room):void
		{
			for(var i:int=0;i<room.numChildren;i++)
			{
				var obj:DisplayObject=room.getChildAt(i);
				if(obj is Object2D_Model)
				{
					var model:Object2D_Model = obj as Object2D_Model;
					_work3D.AddModels(model,room); 
				}	
			}
		}
		

		public function SetScalePostion(pos:int):void//0-90
		{
			daxiao2.x=daxiao1.x+(daxiao1.width-10)*pos/100;
		}
		
		
	]]>
	</fx:Script>
	
	<s:Image source="@Embed('embeds/ToolsBar/toolBar_Bg.png')"  />
	
	<s:Image id="Selected1" source="@Embed('embeds/ToolsBar/toolBar_selected1.png')" visible="false"  />
	<s:Image id="Selected2" source="@Embed('embeds/ToolsBar/toolBar_selected2.png')" visible="false"  />
	
	
	
	<s:Button id="Button1" name="Button1" x="35" verticalCenter="0" width="25" height="25" skinClass="zszh_ToolsBar.Skin_ToolsBarBt" icon="{Button1_down}" buttonMode="true" click="Button_MouseDown(event)" mouseOver="Button_MouseOver(event)" />
	<s:Button id="Button2" name="Button2" x="70" verticalCenter="0" width="25" height="25" skinClass="zszh_ToolsBar.Skin_ToolsBarBt" icon="{Button2_down}" buttonMode="true" click="Button_MouseDown(event)" mouseOver="Button_MouseOver(event)"/>
	
	<s:Button id="Button3" name="Button3" x="125" verticalCenter="0" width="25" height="25" skinClass="zszh_ToolsBar.Skin_ToolsBarBt" icon="{Button3_down}" buttonMode="true" click="Button_MouseDown(event)" mouseOver="Button_MouseOver(event)"/>
	<s:Button id="Button4" name="Button4" x="170" verticalCenter="0" width="30" height="25" skinClass="zszh_ToolsBar.Skin_ToolsBarBt" icon="{Button4_down}" buttonMode="true" click="Button_MouseDown(event)" mouseOver="Button_MouseOver(event)"/>
	<s:Button id="Button5" name="Button5" x="220" verticalCenter="0" width="30" height="25" skinClass="zszh_ToolsBar.Skin_ToolsBarBt" icon="{Button5_down}" buttonMode="true" click="Button_MouseDown(event)" mouseOver="Button_MouseOver(event)"/>
	
	<s:Button id="Button6" name="Button6" x="275" verticalCenter="0" width="30" height="25" skinClass="zszh_ToolsBar.Skin_ToolsBarBt" icon="{Button6_down}" click="Button_MouseDown(event)" buttonMode="true" mouseOver="Button_MouseOver(event)"/>
	<s:Button id="Button7" name="Button7" x="315" verticalCenter="0" width="30" height="25" skinClass="zszh_ToolsBar.Skin_ToolsBarBt" icon="{Button7_down}" click="Button_MouseDown(event)" buttonMode="true" mouseOver="Button_MouseOver(event)"/>

	<s:Button id="Button8" name="Button8" x="370" verticalCenter="0" width="25" height="25" skinClass="zszh_ToolsBar.Skin_ToolsBarBt" icon="{Button8_down}" buttonMode="true" />
	<s:Button id="Button9" name="Button9" x="498" verticalCenter="0" width="25" height="25" skinClass="zszh_ToolsBar.Skin_ToolsBarBt" icon="{Button9_down}" buttonMode="true" />
	
	<s:SkinnableContainer x="395" verticalCenter="3">
		<s:Image id="daxiao1" x="0" source="@Embed('embeds/ToolsBar/toolBar_daxiao1.png')"   />
		<s:Image id="daxiao2" x="0" source="@Embed('embeds/ToolsBar/toolBar_daxiao2.png')"   />
	</s:SkinnableContainer>
	
	
	<s:Button id="Button10" name="Button10" x="545" verticalCenter="0" width="25" height="25" skinClass="zszh_ToolsBar.Skin_ToolsBarBt" icon="{Button10_down}" click="Button_MouseDown(event)" buttonMode="true" />
	<s:Button id="Button11" name="Button11" x="585" verticalCenter="0" width="25" height="25" skinClass="zszh_ToolsBar.Skin_ToolsBarBt" icon="{Button11_down}" buttonMode="true" />


</s:SkinnableContainer>